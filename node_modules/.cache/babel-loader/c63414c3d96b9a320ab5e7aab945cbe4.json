{"ast":null,"code":"var _jsxFileName = \"/Users/kevinmcdonough/momentum/assignments/buzzpath_frontend/final-project/src/components/coffeeslider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./coffeeslider.css\";\nimport Modal from \"./modal.js\";\nimport Gmap from \"./map.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CoffeeSlider = props => {\n  _s();\n\n  const {\n    step,\n    min,\n    max,\n    defaultValue,\n    value,\n    onChangeValue,\n    openModal\n  } = props;\n  console.log(value);\n  const rangeRef = useRef();\n  const [range, setRange] = useState(defaultValue);\n\n  const handleChange = max => e => {\n    onChangeValue(e);\n    setRange(e.target.value);\n  };\n  /* when slider value > 20 when stops - talk to DOM - open modal */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coffecup\",\n      children: [\"Cups of Joe\", /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: rangeRef,\n        className: \"cupsofjoe\",\n        type: \"range\",\n        step: step,\n        min: min,\n        max: max\n        /* defaultValue = '1' */\n        ,\n        value: value,\n        onChange: handleChange(max)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"range-slider-value\",\n        children: range\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(CoffeeSlider, \"91rmXeIJlRFuA5bLJH6UlbfXxTQ=\");\n\n_c = CoffeeSlider;\nexport default CoffeeSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoffeeSlider\");","map":{"version":3,"sources":["/Users/kevinmcdonough/momentum/assignments/buzzpath_frontend/final-project/src/components/coffeeslider.js"],"names":["React","useState","useRef","useEffect","Modal","Gmap","CoffeeSlider","props","step","min","max","defaultValue","value","onChangeValue","openModal","console","log","rangeRef","range","setRange","handleChange","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,UAAjB;;;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM;AACFC,IAAAA,IADE;AAEFC,IAAAA,GAFE;AAGFC,IAAAA,GAHE;AAIFC,IAAAA,YAJE;AAKFC,IAAAA,KALE;AAMFC,IAAAA,aANE;AAOFC,IAAAA;AAPE,MAQFP,KARJ;AAUAQ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,QAAMK,QAAQ,GAAGf,MAAM,EAAvB;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAACU,YAAD,CAAlC;;AACA,QAAMS,YAAY,GAAGV,GAAG,IAAIW,CAAC,IAAG;AAC5BR,IAAAA,aAAa,CAACQ,CAAD,CAAb;AACAF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASV,KAAV,CAAR;AAGH,GALD;AAQG;;;AAEH,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6CAEE;AACE,QAAA,GAAG,EAAEK,QADP;AAEE,QAAA,SAAS,EAAC,WAFZ;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,IAAI,EAAET,IAJR;AAKE,QAAA,GAAG,EAAEC,GALP;AAME,QAAA,GAAG,EAAEC;AACL;AAPF;AAQE,QAAA,KAAK,EAAEE,KART;AASE,QAAA,QAAQ,EAAEQ,YAAY,CAACV,GAAD;AATxB;AAAA;AAAA;AAAA;AAAA,cAFF,eAaE;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA,kBAAsCQ;AAAtC;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmBH,CA5CD;;GAAMZ,Y;;KAAAA,Y;AA6CN,eAAeA,YAAf","sourcesContent":["import React, { useState, useRef, useEffect }from \"react\";\nimport \"./coffeeslider.css\";\nimport Modal from \"./modal.js\";\nimport Gmap from \"./map.js\"\n\n\nconst CoffeeSlider = (props) => {\n    const {\n        step,\n        min,\n        max,\n        defaultValue,\n        value,\n        onChangeValue,\n        openModal,\n    } = props;\n    \n    console.log(value)\n\n    const rangeRef = useRef();\n    const [range, setRange] = useState(defaultValue);\n    const handleChange = max => e =>{\n        onChangeValue(e)\n        setRange(e.target.value);\n    \n\n    }\n\n\n       /* when slider value > 20 when stops - talk to DOM - open modal */\n\n    return (\n      <>\n        <div className=\"coffecup\">\n          Cups of Joe\n          <input\n            ref={rangeRef}\n            className=\"cupsofjoe\"\n            type=\"range\"\n            step={step}\n            min={min}\n            max={max}\n            /* defaultValue = '1' */\n            value={value}\n            onChange={handleChange(max)}\n          />\n          <span className=\"range-slider-value\">{range}</span>\n        </div>\n      </>\n    );\n}\nexport default CoffeeSlider;\n"]},"metadata":{},"sourceType":"module"}