[{"/Users/micahberman/Documents/momentum/buzzpath/src/index.js":"1","/Users/micahberman/Documents/momentum/buzzpath/src/App.js":"2","/Users/micahberman/Documents/momentum/buzzpath/src/components/modal.js":"3","/Users/micahberman/Documents/momentum/buzzpath/src/components/map.js":"4","/Users/micahberman/Documents/momentum/buzzpath/src/components/coffeeslider.js":"5"},{"size":169,"mtime":1651007715211,"results":"6","hashOfConfig":"7"},{"size":1801,"mtime":1651624461499,"results":"8","hashOfConfig":"7"},{"size":874,"mtime":1651007715210,"results":"9","hashOfConfig":"7"},{"size":7064,"mtime":1651627338506,"results":"10","hashOfConfig":"7"},{"size":1111,"mtime":1651624461500,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5wysxb",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/micahberman/Documents/momentum/buzzpath/src/index.js",[],[],"/Users/micahberman/Documents/momentum/buzzpath/src/App.js",["28","29","30","31","32","33","34","35"],[],"/Users/micahberman/Documents/momentum/buzzpath/src/components/modal.js",["36"],[],"/Users/micahberman/Documents/momentum/buzzpath/src/components/map.js",["37","38","39","40","41","42"],[],"/* global google */\nimport {\n  useLoadScript,\n  GoogleMap,\n  Autocomplete,\n  DirectionsRenderer,\n  Marker,\n } from \"@react-google-maps/api\";\nimport { render } from \"@testing-library/react\";\nimport React, { useState, useRef, useEffect } from 'react'\nimport \"./maps.css\"\n/* import PlaceFinder from './placeFinder.js'\n */\n \n\n\n\nconst center = {lat: 35.9940,lng: -78.8986}\nconst libraries = [\"places\"]\nconst mapContainerStyle = {\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"visible\",\n    resetBoundsOnResize: \"true\",\n}\n\n\nexport default function Gmap ({rangeValue}) {\n    \n                const [map, setMap] = useState(null);\n                const [directionsResponse, setDirectionsResponse] =\n                  useState(null);\n                const [distance, setDistance] = useState(\"\");\n                const [duration, setDuration] = useState(\"\");\n                const [coffeeLat, setCoffeeLat] = useState(null);\n                const [coffeeLng, setCoffeeLng] = useState(null);\n              \n\n                const originRef = useRef();\n                const destinationRef = useRef();\n    const { isLoaded, loaderror } = useLoadScript({\n          googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n          libraries,\n        });\n    if (loaderror) return \"Where's my Coffee!! - be\";\n    if(!isLoaded) return \"Finding your coffee\";\n\n\n    const distCoffee = (distance.slice(0,-2))\n    const intCoffee = Number(distCoffee)\n    const coffeeDistance = intCoffee / rangeValue;\n/*Sets Markers Code Start*/  \nfunction findLegsLength(route){\n\n      const tripDistance = route.legs[0].distance.value\n      const newLegLength = tripDistance / (rangeValue)\n      \n      return newLegLength;\n      }\n\n\n function getMarkerPositions (route) {  \n   \n     let markers = [],\n       geo = google.maps.geometry.spherical,\n       path = route.overview_path,\n       point = path[0],\n       distance = 0,\n       leg,\n       overflow,\n       markerPosition,\n       distanceBetweenStops = findLegsLength(route),\n       markerOptions = {\n         icon: \"http://labs.google.com/ridefinder/images/mm_20_blue.png\",\n       };\n\n     // For each point on the path\n     path.forEach(pointOnPath => {\n       // Set the distance of the leg to (previous point distances) + (distance from last point to current point)\n       leg = Math.round(geo.computeDistanceBetween(point, pointOnPath));\n       let d1 = distance + 0;\n       distance += leg;\n       overflow = distanceBetweenStops - (d1 % distanceBetweenStops);\n\n       // Once the leg is >= to the desired distance between points, create the new marker and push it to markers\n       if (distance >= distanceBetweenStops && leg >= overflow) {\n         markerPosition = geo.computeOffset(\n           point,\n           overflow,\n           geo.computeHeading(point, pointOnPath)\n         );\n         markerOptions.position = markerPosition;\n         markers.push(new google.maps.Marker(markerOptions));\n         distance -= distanceBetweenStops;\n       }\n       point = pointOnPath;\n     });\n\n     /* latlngs of markers*/\n  const coffeeListLat = [];\n  const coffeeListLng = [];\n         markers.forEach(function (marker) {\n           \n\n           console.log(\"Looping 1 search for each marker lat/lng.\");\n           const url =\n             \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?\";\n           const location = `location=${marker.position.lat()},${marker.position.lng()}`;\n           const radius = \"&radius=5000\";\n           const keyword = \"&keyword=coffee\";\n           const key = \"&key=AIzaSyCKz0oLVBeWPeIZBLO-JALpTrQCFTz_Fg8\";\n           const restaurantSearchUrl = url + location + radius + keyword + key;\n\n           fetch(restaurantSearchUrl)\n             .then((response) => response.json())\n             .then(\n               (data) => (\n                 \n                \n                 coffeeListLat.push(\n                   data.results[0].geometry.location.lat, \n                   \n                 ),\n\n                 coffeeListLng.push(\n                  data.results[0].geometry.location.lng,\n                 )))\n\n\n              \n               \n                 \n                 /* setCoffeeLat(data.results[0].geometry.location.lat),\n                 setCoffeeLng(data.results[0].geometry.location.lng) */\n               \n             \n         });\n         console.log(\"Number of Markers:\", markers)\n         console.log(\"Marker 1 latlng:\", markers[0].position.lat(), markers[0].position.lng());\n         console.log(\"Marker 2 latlng:\", markers[1].position.lat(), markers[1].position.lng());\n         console.log(\"Coffee LngList:\", coffeeListLng);\n        console.log(\"Coffee ListLat:\", coffeeListLat)\n\n        setCoffeeLat(coffeeListLat)\n        setCoffeeLng(coffeeListLng)\n\n        console.log(\"NewCoffeeListLat:\", coffeeLat)\n         \n   /*   console.log(\"coffee lat: \", coffeeLat);\n    console.log(\"coffee lng:\", coffeeLng)\n     console.log(markers) */\n     return markers.map(function (marker){\n       return { lat: coffeeLat, lng: coffeeLng }\n     });}\n    \n     \n\n    \n\n /*Sets Markers Code End*/\n \n         \n    async function calculatePath(){\n       \n        if (originRef.current.value === '' || destinationRef.current.value === ''){\n            return\n        }\n        \n        // eslint-disable-next-line no-undef\n        const directionsService = new google.maps.DirectionsService()\n        const results = await directionsService.route({\n          origin: originRef.current.value,\n          destination: destinationRef.current.value,\n          // eslint-disable-next-line no-undef\n          travelMode: google.maps.TravelMode.DRIVING,\n         waypoints:[{ location:{lat: coffeeLat[0],lng: coffeeLng[0]}, \n          stopover:true}]\n        });\n        /* console.log(results, \"waypoints\") */\n\n        \n\n       \n    const markerPositions = getMarkerPositions(results.routes[0]);\n    \n    markerPositions.map( markerPositions => {\n    \n    })\n              \n            \n       /*  placeFinder(markerPositions) */      \n        setDirectionsResponse(results)\n        setDistance(results.routes[0].legs[0].distance.text)\n        setDuration(results.routes[0].legs[0].duration.text)\n      \n        \n\n  }\n\nreturn (\n  <div>\n    <div>\n      <Autocomplete>\n        <input type=\"text\" placeholder=\"Origin\" ref={originRef} />\n      </Autocomplete>\n    </div>\n    <div>\n      <Autocomplete>\n        <input type=\"text\" placeholder=\"Destination\" ref={destinationRef} />\n      </Autocomplete>\n    </div>\n    <div>\n      <button type=\"submit\" onClick={calculatePath}>\n        Find your Buzzed Path\n      </button>\n    </div>\n    <div>\n      <p>Distance: {distance}</p>\n      <p>Duration: {duration}</p>\n      <p>Miles per Coffee: {coffeeDistance}</p>  \n    </div>\n    <div className=\"coffeemap\">\n      <GoogleMap mapContainerStyle={mapContainerStyle} zoom={8} center={center}>\n        <Marker position={center} />\n        {directionsResponse && (\n          <DirectionsRenderer directions={directionsResponse} />\n        )}\n      </GoogleMap>\n    </div>\n  </div>\n);\n\n        }\n","/Users/micahberman/Documents/momentum/buzzpath/src/components/coffeeslider.js",["43","44","45","46","47","48"],[],{"ruleId":"49","severity":1,"message":"50","line":5,"column":17,"nodeType":"51","messageId":"52","endLine":5,"endColumn":30},{"ruleId":"49","severity":1,"message":"53","line":6,"column":8,"nodeType":"51","messageId":"52","endLine":6,"endColumn":19},{"ruleId":"49","severity":1,"message":"54","line":7,"column":8,"nodeType":"51","messageId":"52","endLine":7,"endColumn":26},{"ruleId":"49","severity":1,"message":"55","line":7,"column":29,"nodeType":"51","messageId":"52","endLine":7,"endColumn":36},{"ruleId":"49","severity":1,"message":"56","line":20,"column":7,"nodeType":"51","messageId":"52","endLine":20,"endColumn":16},{"ruleId":"49","severity":1,"message":"57","line":36,"column":11,"nodeType":"51","messageId":"52","endLine":36,"endColumn":20},{"ruleId":"49","severity":1,"message":"58","line":43,"column":25,"nodeType":"51","messageId":"52","endLine":43,"endColumn":31},{"ruleId":"59","severity":1,"message":"60","line":77,"column":21,"nodeType":"61","messageId":"62","endLine":77,"endColumn":23},{"ruleId":"63","severity":1,"message":"64","line":21,"column":13,"nodeType":"65","messageId":"66","endLine":21,"endColumn":144,"fix":"67"},{"ruleId":"49","severity":1,"message":"68","line":9,"column":10,"nodeType":"51","messageId":"52","endLine":9,"endColumn":16},{"ruleId":"49","severity":1,"message":"69","line":10,"column":35,"nodeType":"51","messageId":"52","endLine":10,"endColumn":44},{"ruleId":"49","severity":1,"message":"70","line":30,"column":24,"nodeType":"51","messageId":"52","endLine":30,"endColumn":27},{"ruleId":"49","severity":1,"message":"71","line":30,"column":29,"nodeType":"51","messageId":"52","endLine":30,"endColumn":35},{"ruleId":"72","severity":1,"message":"73","line":123,"column":19,"nodeType":"74","messageId":"75","endLine":123,"endColumn":20},{"ruleId":"76","severity":1,"message":"77","line":186,"column":42,"nodeType":"78","messageId":"79","endLine":186,"endColumn":44},{"ruleId":"49","severity":1,"message":"80","line":1,"column":27,"nodeType":"51","messageId":"52","endLine":1,"endColumn":33},{"ruleId":"49","severity":1,"message":"69","line":1,"column":35,"nodeType":"51","messageId":"52","endLine":1,"endColumn":44},{"ruleId":"49","severity":1,"message":"81","line":3,"column":8,"nodeType":"51","messageId":"52","endLine":3,"endColumn":13},{"ruleId":"49","severity":1,"message":"82","line":10,"column":9,"nodeType":"51","messageId":"52","endLine":10,"endColumn":12},{"ruleId":"49","severity":1,"message":"83","line":11,"column":9,"nodeType":"51","messageId":"52","endLine":11,"endColumn":12},{"ruleId":"49","severity":1,"message":"57","line":15,"column":9,"nodeType":"51","messageId":"52","endLine":15,"endColumn":18},"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'PlaceFinder' is defined but never used.","'GetMarkerPositions' is defined but never used.","'markers' is defined but never used.","'libraries' is assigned a value but never used.","'openModal' is assigned a value but never used.","'isOpen' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"84","text":"85"},"'render' is defined but never used.","'useEffect' is defined but never used.","'map' is assigned a value but never used.","'setMap' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useRef' is defined but never used.","'Modal' is defined but never used.","'min' is assigned a value but never used.","'max' is assigned a value but never used.",[613,613]," rel=\"noreferrer\""]