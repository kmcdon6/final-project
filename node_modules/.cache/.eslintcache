[{"/Users/chris/momentum/final_project_1/final-project/src/index.js":"1","/Users/chris/momentum/final_project_1/final-project/src/App.js":"2","/Users/chris/momentum/final_project_1/final-project/src/components/modal.js":"3","/Users/chris/momentum/final_project_1/final-project/src/components/coffeeslider.js":"4","/Users/chris/momentum/final_project_1/final-project/src/components/map.js":"5"},{"size":169,"mtime":1651180396443,"results":"6","hashOfConfig":"7"},{"size":1801,"mtime":1651501851034,"results":"8","hashOfConfig":"7"},{"size":874,"mtime":1651180396441,"results":"9","hashOfConfig":"7"},{"size":1111,"mtime":1651437922049,"results":"10","hashOfConfig":"7"},{"size":7238,"mtime":1651611897556,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wurh27",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/chris/momentum/final_project_1/final-project/src/index.js",[],[],"/Users/chris/momentum/final_project_1/final-project/src/App.js",["32","33","34","35","36","37","38","39"],[],"import Modal from './components/modal.js'\nimport \"./App.css\";\nimport Gmap from './components/map.js'\nimport CoffeeSlider from './components/coffeeslider.js'\nimport React, { createContext, useState } from 'react'\nimport PlaceFinder from './components/map.js'\nimport GetMarkerPositions, {markers} from \"./components/map.js\"\n/* import onChangeSlider from \"./components/slidervalue.js\";\nimport rangeValue from \"./components/slidervalue.js\";\nimport setShow from \"./components/slidervalue.js\";\nimport show from \"./components/slidervalue.js\"; */\n/* import onChangeSlider from \"./components/slidervalue.js\"\n */\n/* import ModalPopUp from './components/modalpopup.js' */\n\n\n\n\nconst center = { lat: 35.9940, lng: -78.8986 };\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n  position: \"absolute\",\n};\n\n\n\nfunction App(props) {\n\n\n  const onChangeSlider = (e) => {\n    console.log(rangeValue);\n    setRangeValue(parseInt(e.target.value, 10));\n    if (rangeValue > 19) {\n      let openModal = setShow(true);\n    }\n  };\n  \n\n\n  const [rangeValue, setRangeValue] = useState(1);\n  const [show, setShow, isOpen] = useState(false);\n  \n\nreturn (\n  <div>\n    <div>\n      <CoffeeSlider\n        step={1}\n        defaultValue={1}\n        value={rangeValue}\n        onChangeValue={onChangeSlider}\n      />\n    </div>\n    <div className=\"modal-button\">\n      <button onClick={() => setShow(true)}>Coffee Addiction?</button>\n      <Modal onClose={() => setShow(false)} show={show} />\n    </div>\n    <div>\n    \n    </div>\n    <div className=\"gmaps\">\n      <Gmap\n        mapContainerStyle={mapContainerStyle}\n        zoom={8}\n        center={center}\n        resetBoundsOnResize={true}\n        rangeValue={rangeValue}\n        \n      ></Gmap>\n    </div>\n  </div>\n);\n}\n\nexport default App; {}",["40","41"],"/Users/chris/momentum/final_project_1/final-project/src/components/modal.js",["42"],[],"/Users/chris/momentum/final_project_1/final-project/src/components/coffeeslider.js",["43","44","45","46","47","48"],[],"import React, { useState, useRef, useEffect }from \"react\";\nimport \"./coffeeslider.css\";\nimport Modal from \"./modal.js\";\n\n\nconst CoffeeSlider = (props) => {\n \n  const {\n        step,\n        min,\n        max,\n        defaultValue,\n        value,\n        onChangeValue,\n        openModal,\n    } = props;\n    console.log(value)\n    \n    const [range, setRange] = useState(defaultValue);\n    const handleChange = e =>{\n        onChangeValue(e)\n        console.log(e.target.value)\n        setRange(e.target.value);\n        \n/*         this.setState({sliderValue})\n */    }\n\n    \n\n  \n       /* when slider value > 20 when stops - talk to DOM - open modal */\n\n    return (\n      <>\n        <div className=\"coffecup\">\n          Cups of Joe\n          <input\n            className=\"cupsofjoe\"\n            type=\"range\"\n            step={step}\n            min='0'\n            max='20'\n            /* defaultValue = '1' */\n            value={value}\n            onChange={handleChange}\n          />\n          <span className=\"range-slider-value\">{range}</span>\n        </div>\n      </>\n    );\n}\n\nexport default CoffeeSlider;\n",["49","50"],"/Users/chris/momentum/final_project_1/final-project/src/components/map.js",["51","52","53","54","55","56"],[],"/* global google */\nimport {\n  useLoadScript,\n  GoogleMap,\n  Autocomplete,\n  DirectionsRenderer,\n  Marker,\n } from \"@react-google-maps/api\";\nimport { render } from \"@testing-library/react\";\nimport React, { useState, useRef, useEffect } from 'react'\nimport \"./maps.css\"\n/* import PlaceFinder from './placeFinder.js'\n */\n \n\n\n\nconst center = {lat: 35.9940,lng: -78.8986}\nconst libraries = [\"places\"]\nconst mapContainerStyle = {\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"visible\",\n    resetBoundsOnResize: \"true\",\n}\n\n\nexport default function Gmap ({rangeValue}) {\n    \n                const [map, setMap] = useState(null);\n                const [directionsResponse, setDirectionsResponse] =\n                  useState(null);\n                const [distance, setDistance] = useState(\"\");\n                const [duration, setDuration] = useState(\"\");\n                const [coffeeLat, setCoffeeLat] = useState(null);\n                const [coffeeLng, setCoffeeLng] = useState(null);\n              \n\n                const originRef = useRef();\n                const destinationRef = useRef();\n    const { isLoaded, loaderror } = useLoadScript({\n          googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n          libraries,\n        });\n    if (loaderror) return \"Where's my Coffee!! - be\";\n    if(!isLoaded) return \"Finding your coffee\";\n\n\n    const distCoffee = (distance.slice(0,-2))\n    const intCoffee = Number(distCoffee)\n    const coffeeDistance = intCoffee / rangeValue;\n/*Sets Markers Code Start*/  \nfunction findLegsLength(route){\n      console.log(rangeValue)     \n      console.log(route.legs[0].distance.value);\n\n      const tripDistance = route.legs[0].distance.value\n      const newLegLength = tripDistance / (rangeValue)\n      \n      console.log(newLegLength)\n      return newLegLength;\n      }\n\n\n function getMarkerPositions (route) { \n  console.log('Get Markers Gets Called')  \n   \n     let markers = [],\n       geo = google.maps.geometry.spherical,\n       path = route.overview_path,\n       point = path[0],\n       distance = 0,\n       leg,\n       overflow,\n       markerPosition,\n       distanceBetweenStops = findLegsLength(route),\n       markerOptions = {\n         icon: \"http://labs.google.com/ridefinder/images/mm_20_blue.png\",\n       };\n\n     // For each point on the path\n     path.forEach(pointOnPath => {\n       // Set the distance of the leg to (previous point distances) + (distance from last point to current point)\n       leg = Math.round(geo.computeDistanceBetween(point, pointOnPath));\n       let d1 = distance + 0;\n       distance += leg;\n       overflow = distanceBetweenStops - (d1 % distanceBetweenStops);\n\n       // Once the leg is >= to the desired distance between points, create the new marker and push it to markers\n       if (distance >= distanceBetweenStops && leg >= overflow) {\n         markerPosition = geo.computeOffset(\n           point,\n           overflow,\n           geo.computeHeading(point, pointOnPath)\n         );\n         markerOptions.position = markerPosition;\n         markers.push(new google.maps.Marker(markerOptions));\n         distance -= distanceBetweenStops;\n       }\n       point = pointOnPath;\n     });\n\n     /* latlngs of markers*/\n     \n         markers.forEach(function (marker) {\n           console.log(marker.position.lat(), marker.position.lng());\n\n           console.log(\"function gets called\");\n           const coffeeList = [];\n           const url =\n             \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?\";\n           const location = `location=${marker.position.lat()},${marker.position.lng()}`;\n           const radius = \"&radius=5000\";\n           const keyword = \"&keyword=coffee\";\n           const key = \"&key=AIzaSyCKz0oLVBeWPeIZBLO-JALpTrQCFTz_Fg8\";\n           const restaurantSearchUrl = url + location + radius + keyword + key;\n\n           fetch(restaurantSearchUrl)\n             .then((response) => response.json())\n             .then(\n               (data) => (\n                 console.log(\n                   data.results[0].geometry.location.lat,\n                   data.results[0].geometry.location.lng\n                 ),\n                \n                 coffeeList.push(\n                   data.results[0].geometry.location.lat, \n                   data.results[0].geometry.location.lng\n                 ),\n              \n                 setCoffeeLat( coffeeList[0]),\n                 setCoffeeLng( coffeeList[1])\n                 )\n                 /* setCoffeeLat(data.results[0].geometry.location.lat),\n                 setCoffeeLng(data.results[0].geometry.location.lng) */\n               \n             );\n             console.log('coffeeList',coffeeList);\n            \n             console.log('setCoffeeLat', setCoffeeLat)\n             \n             console.log('setCoffeeLng', setCoffeeLng)\n         });\n      \n     /*   console.log(markerPosition);\n  console.log('PATH:', path); */ \n\n     console.log(\"coffee lat: \", coffeeLat);\n    console.log(\"coffee lng:\", coffeeLng)\n     console.log(markers)\n     return markers.map(function (marker){\n       return { lat: coffeeLat, lng: coffeeLng }\n     });}\n    \n \n\n    \n\n /*Sets Markers Code End*/\n \n          \n    async function calculatePath(){\n       \n        if (originRef.current.value === '' || destinationRef.current.value === ''){\n            return\n        }\n        \n        // eslint-disable-next-line no-undef\n        const directionsService = new google.maps.DirectionsService()\n        const results = await directionsService.route({\n          origin: originRef.current.value,\n          destination: destinationRef.current.value,\n          // eslint-disable-next-line no-undef\n          travelMode: google.maps.TravelMode.DRIVING,\n          /* waypoints:[{ location:{lat: coffeeLat,lng: coffeeLng }, \n          stopover:true}] */  \n        });\n        /* console.log(results, \"waypoints\") */\n\n        \n\n       \n    const markerPositions = getMarkerPositions(results.routes[0]);\n    console.log(typeof(\"MKRPOS:\", markerPositions));\n    markerPositions.map( markerPositions => {\n      console.log(markerPositions)\n    })\n              \n            \n       /*  placeFinder(markerPositions) */      \n        setDirectionsResponse(results)\n        setDistance(results.routes[0].legs[0].distance.text)\n        setDuration(results.routes[0].legs[0].duration.text)\n      \n        \n\n  }\n\nreturn (\n  <div>\n    <div>\n      <Autocomplete>\n        <input type=\"text\" placeholder=\"Origin\" ref={originRef} />\n      </Autocomplete>\n    </div>\n    <div>\n      <Autocomplete>\n        <input type=\"text\" placeholder=\"Destination\" ref={destinationRef} />\n      </Autocomplete>\n    </div>\n    <div>\n      <button type=\"submit\" onClick={calculatePath}>\n        Find your Buzzed Path\n      </button>\n    </div>\n    <div>\n      <p>Distance: {distance}</p>\n      <p>Duration: {duration}</p>\n      <p>Miles per Coffee: {coffeeDistance}</p>  \n    </div>\n    <div className=\"coffeemap\">\n      <GoogleMap mapContainerStyle={mapContainerStyle} zoom={8} center={center}>\n        <Marker position={center} />\n        {directionsResponse && (\n          <DirectionsRenderer directions={directionsResponse} />\n        )}\n      </GoogleMap>\n    </div>\n  </div>\n);\n\n        }\n",{"ruleId":"57","severity":1,"message":"58","line":5,"column":17,"nodeType":"59","messageId":"60","endLine":5,"endColumn":30},{"ruleId":"57","severity":1,"message":"61","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":19},{"ruleId":"57","severity":1,"message":"62","line":7,"column":8,"nodeType":"59","messageId":"60","endLine":7,"endColumn":26},{"ruleId":"57","severity":1,"message":"63","line":7,"column":29,"nodeType":"59","messageId":"60","endLine":7,"endColumn":36},{"ruleId":"57","severity":1,"message":"64","line":20,"column":7,"nodeType":"59","messageId":"60","endLine":20,"endColumn":16},{"ruleId":"57","severity":1,"message":"65","line":36,"column":11,"nodeType":"59","messageId":"60","endLine":36,"endColumn":20},{"ruleId":"57","severity":1,"message":"66","line":43,"column":25,"nodeType":"59","messageId":"60","endLine":43,"endColumn":31},{"ruleId":"67","severity":1,"message":"68","line":77,"column":21,"nodeType":"69","messageId":"70","endLine":77,"endColumn":23},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":21,"column":13,"nodeType":"77","messageId":"78","endLine":21,"endColumn":144,"fix":"79"},{"ruleId":"57","severity":1,"message":"80","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":33},{"ruleId":"57","severity":1,"message":"81","line":1,"column":35,"nodeType":"59","messageId":"60","endLine":1,"endColumn":44},{"ruleId":"57","severity":1,"message":"82","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":13},{"ruleId":"57","severity":1,"message":"83","line":10,"column":9,"nodeType":"59","messageId":"60","endLine":10,"endColumn":12},{"ruleId":"57","severity":1,"message":"84","line":11,"column":9,"nodeType":"59","messageId":"60","endLine":11,"endColumn":12},{"ruleId":"57","severity":1,"message":"65","line":15,"column":9,"nodeType":"59","messageId":"60","endLine":15,"endColumn":18},{"ruleId":"71","replacedBy":"85"},{"ruleId":"73","replacedBy":"86"},{"ruleId":"57","severity":1,"message":"87","line":9,"column":10,"nodeType":"59","messageId":"60","endLine":9,"endColumn":16},{"ruleId":"57","severity":1,"message":"81","line":10,"column":35,"nodeType":"59","messageId":"60","endLine":10,"endColumn":44},{"ruleId":"57","severity":1,"message":"88","line":30,"column":24,"nodeType":"59","messageId":"60","endLine":30,"endColumn":27},{"ruleId":"57","severity":1,"message":"89","line":30,"column":29,"nodeType":"59","messageId":"60","endLine":30,"endColumn":35},{"ruleId":"90","severity":1,"message":"91","line":125,"column":19,"nodeType":"92","messageId":"93","endLine":125,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":186,"column":42,"nodeType":"96","messageId":"97","endLine":186,"endColumn":44},"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'PlaceFinder' is defined but never used.","'GetMarkerPositions' is defined but never used.","'markers' is defined but never used.","'libraries' is assigned a value but never used.","'openModal' is assigned a value but never used.","'isOpen' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"100","text":"101"},"'useRef' is defined but never used.","'useEffect' is defined but never used.","'Modal' is defined but never used.","'min' is assigned a value but never used.","'max' is assigned a value but never used.",["98"],["99"],"'render' is defined but never used.","'map' is assigned a value but never used.","'setMap' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",[613,613]," rel=\"noreferrer\""]